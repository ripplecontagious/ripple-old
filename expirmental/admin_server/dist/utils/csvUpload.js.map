{"version":3,"sources":["../../src/utils/csvUpload.js"],"names":["uploadDir","stream","companyName","mkdirp","sync","filePath","fs","unlinkSync","Promise","resolve","reject","pipe","separator","createWriteStream","on","error"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,MAAMA,YAAY,QAAlB;;kBAEe,CAAC,EAAEC,MAAF,EAAUC,WAAV,EAAD,KAA6B;AAC1C;AACAC,mBAAOC,IAAP,CAAYJ,SAAZ;AACA,QAAMK,WAAY,GAAEL,SAAU,GAAEE,WAAY,OAA5C;AACAI,eAAGC,UAAH,CAAcF,QAAd;AACA,SAAO,IAAIG,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KACjBT,OACGU,IADH,CACQ,wBAAS;AACb;AACAC,eAAW;AAFE,GAAT,CADR,EAKGD,IALH,CAKQL,aAAGO,iBAAH,CAAqBR,QAArB,CALR,EAMGS,EANH,CAMM,OANN,EAMeC,SAASL,OAAOK,KAAP,CANxB,EAOGD,EAPH,CAOM,QAPN,EAOgB,MAAML,QAAQ,EAAEJ,QAAF,EAAR,CAPtB,CADK,CAAP;AAUD,C","file":"csvUpload.js","sourcesContent":["import fs from 'fs'\r\nimport csv2json from 'csv2json'\r\nimport mkdirp from 'mkdirp'\r\n\r\nconst uploadDir = '../tmp'\r\n\r\nexport default ({ stream, companyName }) => {\r\n  // Ensure upload directory exists\r\n  mkdirp.sync(uploadDir)\r\n  const filePath = `${uploadDir}${companyName}.json`\r\n  fs.unlinkSync(filePath)\r\n  return new Promise((resolve, reject) =>\r\n    stream\r\n      .pipe(csv2json({\r\n        // Defaults to comma.\r\n        separator: ','\r\n      }))\r\n      .pipe(fs.createWriteStream(filePath))\r\n      .on('error', error => reject(error))\r\n      .on('finish', () => resolve({ filePath }))\r\n  )\r\n}\r\n"]}