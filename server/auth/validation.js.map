{"version":3,"sources":["../../../src/server/auth/validation.js"],"names":["yup","require","emailNotLongEnough","emailTooLong","invalidEmail","passwordNotLongEnough","passwordTooLong","registerPasswordValidation","string","min","max","registerEmailValidation","email","userValidation","object","shape","resetId","bool","reset","password","formatYupError","err","errors","inner","map","e","path","message"],"mappings":";;;;;AAAA,MAAMA,MAAMC,QAAQ,KAAR,CAAZ;;AAEA,MAAMC,qBAAqB,qCAA3B;AACA,MAAMC,eAAe,wCAArB;AACA,MAAMC,eAAe,6BAArB;AACA,MAAMC,wBAAwB,wCAA9B;AACA,MAAMC,kBAAkB,2CAAxB;;AAEA,MAAMC,6BAA6BP,IAChCQ,MADgC,GAEhCC,GAFgC,CAE5B,CAF4B,EAEzBJ,qBAFyB,EAGhCK,GAHgC,CAG5B,GAH4B,CAAnC;;AAKA,MAAMC,0BAA0BX,IAC7BQ,MAD6B,GAE7BC,GAF6B,CAEzB,CAFyB,EAEtBP,kBAFsB,EAG7BQ,GAH6B,CAGzB,GAHyB,EAI7BE,KAJ6B,CAIvBR,YAJuB,CAAhC;;AAMO,MAAMS,0CAAiBb,IAAIc,MAAJ,GAAaC,KAAb,CAAmB;AAC/CC,WAAShB,IAAIiB,IAAJ,EADsC;AAE/CC,SAAOlB,IAAIQ,MAAJ,EAFwC;AAG/CI,SAAOD,uBAHwC;AAI/CQ,YAAUZ;AAJqC,CAAnB,CAAvB;;AAOA,MAAMa,0CAAiBC,OAAO;AACnC,QAAMC,SAASD,IAAIE,KAAJ,CAAUC,GAAV,CAAcC,MAAM;AACjCC,UAAMD,EAAEC,IADyB;AAEjCC,aAASF,EAAEE;AAFsB,GAAN,CAAd,CAAf;AAIA,SAAOL,MAAP;AACD,CANM","file":"validation.js","sourcesContent":["const yup = require('yup')\r\n\r\nconst emailNotLongEnough = 'email must be at least 3 characters'\r\nconst emailTooLong = 'email must be less than 255 characters'\r\nconst invalidEmail = 'email must be a valid email'\r\nconst passwordNotLongEnough = 'password must be at least 3 characters'\r\nconst passwordTooLong = 'password must be less than 255 characters'\r\n\r\nconst registerPasswordValidation = yup\r\n  .string()\r\n  .min(3, passwordNotLongEnough)\r\n  .max(255)\r\n\r\nconst registerEmailValidation = yup\r\n  .string()\r\n  .min(3, emailNotLongEnough)\r\n  .max(255)\r\n  .email(invalidEmail)\r\n\r\nexport const userValidation = yup.object().shape({\r\n  resetId: yup.bool(),\r\n  reset: yup.string(),\r\n  email: registerEmailValidation,\r\n  password: registerPasswordValidation\r\n})\r\n\r\nexport const formatYupError = err => {\r\n  const errors = err.inner.map(e => ({\r\n    path: e.path,\r\n    message: e.message\r\n  }))\r\n  return errors\r\n}\r\n"]}