{"version":3,"sources":["../../src/scheduler/index.js"],"names":["CompanyModel","EmployeeModel","monthlyMondaySchedule","schedule","RecurrenceRule","dayOfWeek","hour","minute","dayOfMonth","monthlySundaySchedule","startMonthSchedule","scheduleJob","companies","find","exec","forEach","companyName","employees","mobile","firstTime","findOneAndUpdate","surveyOwed","LINK_URL","endMonthSchedule","updateMany","weeklyMondaySchedule","weeklySundaySchedule","startWeekSchedule","endWeekSchedule"],"mappings":"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","file":"index.js","sourcesContent":["import schedule from 'node-schedule';\r\nimport { sendSMS } from '../server/utils/sendSMS';\r\nimport { LINK_URL } from '../server/constants';\r\n\r\nexport default ({ CompanyModel, EmployeeModel }) => {\r\n  let monthlyMondaySchedule = new schedule.RecurrenceRule();\r\n  monthlyMondaySchedule.dayOfWeek = 1;\r\n  monthlyMondaySchedule.hour = 8;\r\n  monthlyMondaySchedule.minute = 0;\r\n  monthlyMondaySchedule.dayOfMonth = [1, 2, 3, 4, 5, 6, 7];\r\n\r\n  let monthlySundaySchedule = new schedule.RecurrenceRule();\r\n  monthlySundaySchedule.hour = 11;\r\n  monthlySundaySchedule.minute = 59;\r\n  monthlySundaySchedule.dayOfMonth = 28;\r\n\r\n  let startMonthSchedule = schedule.scheduleJob(\r\n    monthlyMondaySchedule,\r\n    function() {\r\n      let companies = CompanyModel.find({ schedule: 'monthly' }).exec();\r\n      companies.forEach(async ({ companyName }) => {\r\n        const employees = await EmployeeModel.find({\r\n          companyName,\r\n        }).exec();\r\n        employees.forEach(async ({ mobile, companyName, firstTime }) => {\r\n          await EmployeeModel.findOneAndUpdate(\r\n            { mobile },\r\n            { surveyOwed: true }\r\n          );\r\n          await sendSMS(mobile, LINK_URL, companyName, firstTime);\r\n        });\r\n      });\r\n    }\r\n  );\r\n\r\n  let endMonthSchedule = schedule.scheduleJob(\r\n    monthlySundaySchedule,\r\n    function() {\r\n      let companies = CompanyModel.find({ schedule: 'monthly' }).exec();\r\n      companies.forEach(async ({ companyName }) => {\r\n        await EmployeeModel.updateMany(\r\n          { companyName },\r\n          { surveyOwed: false }\r\n        ).exec();\r\n      });\r\n    }\r\n  );\r\n\r\n  /**----------------------------------------------------------------**/\r\n\r\n  let weeklyMondaySchedule = new schedule.RecurrenceRule();\r\n  weeklyMondaySchedule.dayOfWeek = 1;\r\n  weeklyMondaySchedule.hour = 8;\r\n  weeklyMondaySchedule.minute = 0;\r\n\r\n  let weeklySundaySchedule = new schedule.RecurrenceRule();\r\n  weeklySundaySchedule.dayOfWeek = 0;\r\n  weeklySundaySchedule.hour = 11;\r\n  weeklySundaySchedule.minute = 59;\r\n\r\n  let startWeekSchedule = schedule.scheduleJob(\r\n    weeklyMondaySchedule,\r\n    function() {\r\n      let companies = CompanyModel.find({ schedule: 'weekly' }).exec();\r\n      companies.forEach(async ({ companyName }) => {\r\n        const employees = await EmployeeModel.find({\r\n          companyName,\r\n        }).exec();\r\n        employees.forEach(async ({ mobile, companyName, firstTime }) => {\r\n          await EmployeeModel.findOneAndUpdate(\r\n            { mobile },\r\n            { surveyOwed: true }\r\n          );\r\n          await sendSMS(mobile, LINK_URL, companyName, firstTime);\r\n        });\r\n      });\r\n    }\r\n  );\r\n\r\n  let endWeekSchedule = schedule.scheduleJob(weeklySundaySchedule, function() {\r\n    let companies = CompanyModel.find({ schedule: 'weekly' }).exec();\r\n    companies.forEach(async ({ companyName }) => {\r\n      await EmployeeModel.updateMany(\r\n        { companyName },\r\n        { surveyOwed: false }\r\n      ).exec();\r\n    });\r\n  });\r\n\r\n  return {\r\n    startMonthSchedule,\r\n    endMonthSchedule,\r\n    startWeekSchedule,\r\n    endWeekSchedule,\r\n  };\r\n};\r\n"]}